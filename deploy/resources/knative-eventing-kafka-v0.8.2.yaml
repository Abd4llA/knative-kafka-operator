apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    duck.knative.dev/addressable: "true"
  name: kafka-addressable-resolver
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    duck.knative.dev/channelable: "true"
  name: kafka-channelable-manipulator
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-controller
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - update
- apiGroups:
  - ""
  resourceNames:
  - kafka-ch-dispatcher
  resources:
  - configmaps
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-dispatcher
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

---
apiVersion: v1
kind: Service
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    messaging.knative.dev/channel: kafka-channel
    messaging.knative.dev/role: dispatcher
  name: kafka-ch-dispatcher
  namespace: knative-eventing
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    messaging.knative.dev/channel: kafka-channel
    messaging.knative.dev/role: dispatcher

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-dispatcher
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-webhook
  namespace: knative-eventing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-webhook
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kafka-ch-controller
subjects:
- kind: ServiceAccount
  name: kafka-ch-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-dispatcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kafka-ch-dispatcher
subjects:
- kind: ServiceAccount
  name: kafka-ch-dispatcher
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kafka-webhook
subjects:
- kind: ServiceAccount
  name: kafka-webhook
  namespace: knative-eventing

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
  name: kafkachannels.messaging.knative.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .status.address.hostname
    name: Hostname
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: messaging.knative.dev
  names:
    categories:
    - all
    - knative
    - messaging
    - channel
    kind: KafkaChannel
    plural: kafkachannels
    shortNames:
    - kc
    singular: kafkachannel
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            numPartitions:
              description: Number of partitions of a Kafka topic.
              format: int32
              type: integer
            replicationFactor:
              description: Replication factor of a Kafka topic.
              format: int16
              type: integer
            subscribable:
              properties:
                subscribers:
                  description: The list of subscribers that have expressed interest
                    in receiving events from this channel.
                  items:
                    properties:
                      ref:
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            minLength: 1
                            type: string
                          namespace:
                            minLength: 1
                            type: string
                          uid:
                            minLength: 1
                            type: string
                        required:
                        - namespace
                        - name
                        - uid
                        type: object
                      replyURI:
                        minLength: 1
                        type: string
                      subscriberURI:
                        minLength: 1
                        type: string
                      uid:
                        minLength: 1
                        type: string
                    required:
                    - uid
                  type: array
              type: object
  version: v1alpha1

---
apiVersion: v1
data:
  bootstrapServers: REPLACE_WITH_CLUSTER_URL
kind: ConfigMap
metadata:
  name: config-kafka
  namespace: knative-eventing

---
apiVersion: v1
kind: Service
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    role: kafka-webhook
  name: kafka-webhook
  namespace: knative-eventing
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    role: kafka-webhook

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-ch-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      messaging.knative.dev/channel: kafka-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      labels:
        messaging.knative.dev/channel: kafka-channel
        messaging.knative.dev/role: controller
    spec:
      containers:
      - env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/knative-releases/github.com/knative/eventing-contrib/kafka/channel/cmd/channel_controller@sha256:a884d1bb88b04a4979285ebf4d3cf11a3d7b566694646300251dd72766695670
        name: controller
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
        - mountPath: /etc/config-kafka
          name: config-kafka
      serviceAccountName: kafka-ch-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
      - configMap:
          name: config-kafka
        name: config-kafka

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
    role: kafka-webhook
  name: kafka-ch-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      messaging.knative.dev/channel: kafka-channel
      messaging.knative.dev/role: dispatcher
  template:
    metadata:
      labels:
        messaging.knative.dev/channel: kafka-channel
        messaging.knative.dev/role: dispatcher
    spec:
      containers:
      - env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/knative-releases/github.com/knative/eventing-contrib/kafka/channel/cmd/channel_dispatcher@sha256:554cfc3820c0cce2665159f76a9533a821ae01a30d92e8a006fd56d4f9a8acfe
        name: dispatcher
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
        - mountPath: /etc/config-kafka
          name: config-kafka
      serviceAccountName: kafka-ch-dispatcher
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
      - configMap:
          name: config-kafka
        name: config-kafka

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.8.2"
  name: kafka-webhook
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-webhook
      role: kafka-webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: kafka-webhook
        role: kafka-webhook
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: WEBHOOK_NAME
          value: kafka-webhook
        image: gcr.io/knative-releases/github.com/knative/eventing-contrib/kafka/channel/cmd/webhook@sha256:4c93ce4c69748732749081d7b7c6f63183b4ebaf5d674ae293ff1a83c20bbdcb
        name: kafka-webhook
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: kafka-webhook
      volumes:
      - configMap:
          name: config-logging
        name: config-logging

---
